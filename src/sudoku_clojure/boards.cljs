(ns sudoku-clojure.boards)

(def b1 [[0 9 0 0 0 0 0 4 0]
         [0 6 4 2 0 5 7 8 0]
         [0 0 8 0 4 0 9 0 0]
         [4 8 3 0 6 0 2 5 1]
         [9 0 0 0 0 0 0 0 7]
         [2 5 7 0 8 0 4 6 9]
         [0 0 9 0 1 0 5 0 0]
         [0 3 1 8 0 2 6 9 0]
         [0 4 0 0 0 0 0 1 0]])
;; https://www.7sudoku.com/images/examples/solved_puzzle.png
(def b3 [[8 2 7 1 5 4 3 9 6]
         [9 6 5 3 2 7 1 4 8]
         [3 4 1 6 8 9 7 5 2]
         [5 9 3 4 6 8 2 7 1]
         [4 7 2 5 1 3 6 8 9]
         [6 1 8 9 7 2 4 3 5]
         [7 8 6 2 3 5 9 1 4]
         [1 5 4 7 9 6 8 2 3]
         [2 3 9 8 4 1 5 6 0]]) ;; 0 => 7
(def b3X-no-solutions [[8 2 7 1 5 4 3 9 6]
                       [9 6 5 3 2 7 1 4 8]
                       [3 4 1 6 8 9 7 5 2]
                       [5 9 3 4 6 8 2 7 1]
                       [4 7 2 5 1 3 6 8 9]
                       [6 1 8 9 7 2 4 3 5]
                       [7 8 6 2 3 5 9 1 4]
                       [1 5 4 7 9 6 8 2 3]
                       [2 3 9 8 4 1 5 6 6]]) ;; X "6 6"
(def b3X2-no-solutions [[8 2 7 1 5 4 3 9 6]
                        [9 6 5 3 2 7 1 4 8]
                        [3 4 1 6 8 9 7 5 2]
                        [5 9 3 4 6 8 2 7 1]
                        [4 7 2 5 1 3 6 8 9]
                        [6 1 8 9 7 2 4 3 5]
                        [7 8 6 2 3 5 9 1 4]
                        [1 5 4 7 9 6 8 2 3]
                        [2 3 9 8 4 1 0 6 6]]) ;; 0 "6 6"
(def b3b [[8 2 7 1 5 4 3 9 6]
          [9 0 0 3 0 7 0 0 8]
          [0 0 0 6 0 9 0 5 2]
          [0 9 3 4 6 8 2 0 1]
          [0 0 0 0 0 0 0 0 9]
          [6 0 8 9 7 0 4 3 5]
          [7 0 0 2 0 0 0 1 4]
          [1 5 4 7 0 6 8 2 3]
          [2 3 9 8 4 1 5 6 0]])
;; b32s has 2 solutions
(def b32s [[0 2 7 1 5 4 3 9 6]
           [9 0 0 3 0 7 0 0 8]
           [0 0 0 6 0 9 0 5 2]
           [0 9 3 0 6 8 2 0 1]
           [0 0 0 0 0 0 0 0 9]
           [6 0 8 9 7 0 4 3 5]
           [7 0 0 2 0 0 0 1 4]
           [1 5 4 7 0 6 8 0 3]
           [2 3 9 8 4 1 5 6 0]])
(def b4 [[1 2] [3 4]])
(def b5 [[1 2 3]  [4 5 6]  [7 8 9]])

;; TODO figure out error/timeout state ... b6 and b7 hang (take a long time)
;; https://lisperator.net/blog/javascript-sudoku-solver/#sec-bestest
(def b6 [[0 0 0 8 0 1 0 0 0]
         [0 0 0 0 0 0 0 4 3]
         [5 0 0 0 0 0 0 0 0]
         [0 0 0 0 7 0 8 0 0]
         [0 0 0 0 0 0 1 0 0]
         [0 2 0 0 3 0 0 0 0]
         [6 0 0 0 0 0 0 7 5]
         [0 0 3 4 0 0 0 0 0]
         [0 0 0 2 0 0 6 0 0]])
;; https://lisperator.net/blog/javascript-sudoku-solver/#sec-bestest
(def b7 [[0 0 3 9 0 0 0 0 0]
         [4 0 0 0 8 0 0 3 6]
         [0 0 8 0 0 0 1 0 0]
         [0 4 0 0 6 0 0 7 3]
         [8 0 0 0 0 0 0 1 0]
         [0 0 0 0 0 2 0 0 0]
         [0 0 4 0 7 0 0 6 8]
         [6 0 0 0 0 0 0 0 0]
         [7 0 0 0 0 0 5 0 0]])

(def boards [b1 b32s b3X-no-solutions b3X2-no-solutions])
